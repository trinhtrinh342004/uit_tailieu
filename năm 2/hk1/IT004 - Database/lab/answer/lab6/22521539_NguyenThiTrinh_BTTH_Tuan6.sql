--ĐỀ ÔN SỐ 1

---------------------------------------------------------------
--Câu 1. DDL
CREATE DATABASE DE1_SACH
USE DE1_SACH

CREATE TABLE TACGIA
(
	MaTG CHAR(5) ,
	HoTen VARCHAR(20),
	DiaChi VARCHAR(50),
	NgSinh SMALLDATETIME,
	SoDT VARCHAR(15),
	CONSTRAINT PK_TACGIA PRIMARY KEY (MaTG)
)

CREATE TABLE SACH
(
	MaSach CHAR(5),
	TenSach VARCHAR(25),
	TheLoai VARCHAR(25),
	CONSTRAINT PK_SACH PRIMARY KEY (MaSach)
)

CREATE TABLE TACGIA_SACH
(
	MaTG CHAR(5),
	MaSach CHAR(5),
	CONSTRAINT PK_TG_SACH PRIMARY KEY (MaTG, MaSach)
)

CREATE TABLE PHATHANH
(
	MaPH CHAR(5),
	MaSach CHAR(5),
	NgayPH SMALLDATETIME,
	SoLuong INT,
	NhaXuatBan VARCHAR(20),
	CONSTRAINT PK_PHATTHANH PRIMARY KEY (MaPH)
)

--Thêm khóa ngoại 
ALTER TABLE TACGIA_SACH
ADD CONSTRAINT FK1_TG_SACH FOREIGN KEY (MaTG) REFERENCES TACGIA (MaTG)

ALTER TABLE TACGIA_SACH
ADD CONSTRAINT FK2_TG_SACH FOREIGN KEY (MaSach) REFERENCES SACH (MaSach)

ALTER TABLE PHATHANH
ADD CONSTRAINT FK_PHATHANH FOREIGN KEY (MaSach) REFERENCES SACH (MaSach)

---------------------------------------------------------------
--Câu 2: TRIGGER
--2.1. Ngày phát hành sách phải lớn hơn ngày sinh của tác giả. (1.5 đ)
GO
CREATE TRIGGER TRG_PHATHANH_NGAYSINH
ON PHATHANH
FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @NGAYSINH SMALLDATETIME, @NGAYPH SMALLDATETIME, @MASACH CHAR(5), @MATG CHAR(5)
	SELECT @NGAYPH = NgayPH,  @MASACH = MaSach FROM INSERTED
	SELECT @NGAYSINH = TACGIA.NgSinh, @MATG = TACGIA_SACH.MaTG
	FROM TACGIA, TACGIA_SACH
	WHERE TACGIA_SACH.MaTG = TACGIA.MaTG AND TACGIA_SACH.MaSach = @MASACH
	IF @NGAYPH < @NGAYSINH
	BEGIN 
		RAISERROR('Ngày phát hành (NgayPH) sách phải lớn hơn ngày sinh (NgSinh) của tác giả.', 16, 1)
        ROLLBACK TRANSACTION
	END
END
GO
DROP TRIGGER TRG_PHATHANH_NGAYSINH
GO

--2.2. Sách thuộc thể loại “Giáo khoa” chỉ do nhà xuất bản “Giáo dục” phát hành. (1.5 đ) 
CREATE TRIGGER TR_SACH_THELOAI_GIAOKHOA
ON SACH
FOR INSERT, UPDATE
AS
BEGIN
    DECLARE @THELOAI VARCHAR(25), @NXB VARCHAR(20), @MASACH CHAR(5)
    SELECT @THELOAI = TheLoai, @MASACH = MaSach FROM INSERTED
    SELECT @NXB = NhaXuatBan FROM PHATHANH WHERE MaSach = @MASACH
    IF @THELOAI = 'Giáo khoa' AND @NXB <> 'Giáo dục'
    BEGIN
        RAISERROR('Sách thuộc thể loại (TheLoai) “Giáo khoa” chỉ do nhà xuất bản (NhaXuatBan) “Giáo dục” phát hành.', 16, 1)
        ROLLBACK TRANSACTION
    END
END

DROP TRIGGER TR_SACH_THELOAI_GIAOKHOA

---------------------------------------------------------------
--Câu 3: TRUY VẤN
--3.1. Tìm tác giả (MaTG,HoTen,SoDT) của những quyển sách thuộc thể loại “Văn học” 
--do nhà xuất bản Trẻ phát hành. (1.5đ)
SELECT TG.MaTG, HoTen, SoDT
FROM TACGIA TG, SACH S, TACGIA_SACH TG_S, PHATHANH PH
WHERE TG_S.MaSach = S.MaSach AND TG_S.MaTG = TG.MaTG AND PH.MaSach = S.MaSach
AND TheLoai = 'Văn học'
AND NhaXuatBan = 'Trẻ'

--3.2. Tìm nhà xuất bản phát hành nhiều thể loại sách nhất.(1.5 đ)  
SELECT TOP 1 WITH TIES NhaXuatBan
FROM PHATHANH PH, SACH S
WHERE PH.MaSach = S.MaSach
GROUP BY NhaXuatBan
ORDER BY COUNT(DISTINCT TheLoai) DESC  --Thiếu DISINCT (*)

--3.3. Trong mỗi nhà xuất bản, tìm tác giả (MaTG,HoTen) có số lần phát hành nhiều sách 
--nhất. (1 đ) 
SELECT NhaXuatBan, TG.MaTG, HoTen, COUNT(MaPH)
FROM TACGIA TG, PHATHANH A, , TACGIA_SACH B
WHERE TG.MATG = B.MATG AND B.MASACH = A.MASACH
GROUP BY NhaXuatBan, TG.MaTG, HoTen
HAVING COUNT(MAPH) >= ALL
		(
			SELECT TOP 1 COUNT(MAPH) AS [SOLUONGPH]
			FROM PHATHANHA1, TACGIA_SACH B1
			WHERE B1.MASACH = A1.MASACH
			AND A1.NHAXUATBAN = A.NHAXUATBAN
			GROUP BY B1.MATG
			ORDER BY COUNT(MAPH) DESC
		)


-------------------------------------------------------------------------------------------------------------
--ĐỀ ÔN SỐ 2

---------------------------------------------------------------
--Câu 1. DDL
CREATE DATABASE DE2_NHANVIEN
USE DE2_NHANVIEN

CREATE TABLE NHANVIEN
(
	MANV CHAR(5),
	HOTEN VARCHAR(20),
	NGAYVL SMALLDATETIME,
	HSLUONG NUMERIC(4,2),
	MAPHONG CHAR(5),
	CONSTRAINT PK_NHANVIEN PRIMARY KEY (MANV)
)

CREATE TABLE PHONGBAN
(
	MAPHONG CHAR(5),
	TENPHONG VARCHAR(25),
	TRUONGPHONG CHAR(5),
	CONSTRAINT PK_PHONGBAN PRIMARY KEY (MAPHONG)
)

CREATE TABLE XE 
(
	MAXE CHAR(5),
	LOAIXE VARCHAR(20),
	SOCHONGOI INT,
	NAMSX INT,
	CONSTRAINT PK_XE PRIMARY KEY (MAXE)
)

CREATE TABLE PHANCONG 
(
	MAPC CHAR(5),
	MANV CHAR(5) NOT NULL,
	MAXE CHAR(5) NOT NULL,
	NGAYDI SMALLDATETIME,
	NGAYVE SMALLDATETIME,
	NOIDEN VARCHAR(25),
	CONSTRAINT PK_PHANCONG PRIMARY KEY (MAPC)
)

--Thêm khóa ngoại 
ALTER TABLE PHANCONG
ADD CONSTRAINT FK1_PC FOREIGN KEY (MANV) REFERENCES NHANVIEN (MANV)

ALTER TABLE PHANCONG
ADD CONSTRAINT FK2_PC FOREIGN KEY (MAXE) REFERENCES XE(MAXE)

ALTER TABLE NHANVIEN
ADD CONSTRAINT FK_NV FOREIGN KEY (MAPHONG) REFERENCES PHONGBAN (MAPHONG)

ALTER TABLE PHONGBAN
ADD CONSTRAINT FK_PB FOREIGN KEY (TRUONGPHONG) REFERENCES NHANVIEN(MANV)

---------------------------------------------------------------
--Câu 2: TRIGGER
--2.1. Năm sản xuất của xe loại Toyota phải từ năm 2006 trở về sau. (1.5 đ) 
ALTER TABLE XE ADD CONSTRAINT CK_XE_NAMSX CHECK (LOAIXE = 'Toyota' AND NAMSX >= 2006)

GO
--2.2. Nhân viên thuộc phòng lái xe “Ngoại thành” chỉ được phân công lái xe loại Toyota. 
CREATE TRIGGER TR_PHANCONG_LOAIXE
ON PHANCONG
FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @MAXE CHAR(5), @MAPHONG CHAR(5), @LOAIXE VARCHAR(20), @MANV CHAR(5), @MAPC CHAR(5), @TENPHONG VARCHAR(25)
	SELECT @MAXE = MAXE, @MANV =MANV FROM INSERTED
	SELECT @MAPC = MAPC FROM PHANCONG WHERE MANV = @MANV
	SELECT @LOAIXE = LOAIXE FROM XE WHERE MAXE = @MAXE
	SELECT @MAPHONG = MAPHONG FROM NHANVIEN WHERE MANV = @MANV
	SELECT @TENPHONG = TENPHONG FROM PHONGBAN WHERE MAPHONG = @MAPHONG

	IF @MAPHONG = 'Ngoại thành'
	BEGIN
		IF @LOAIXE <> 'Toyota'
		BEGIN
			RAISERROR('Nhân viên thuộc phòng lái xe “Ngoại thành” chỉ được phân công lái xe loại Toyota.', 16, 1)
			ROLLBACK TRANSACTION
		END
	END
END
GO 
CREATE TRIGGER TR_NHANVIEN_UPDATE
ON NHANVIEN
FOR UPDATE
AS
BEGIN
	DECLARE @MAXE CHAR(5), @MAPHONG CHAR(5), @LOAIXE VARCHAR(20), @MANV CHAR(5), @MAPC CHAR(5)
	
	SELECT @MANV = MANV, @MAPHONG = MAPHONG FROM INSERTED
	SELECT @MAPC = MAPC FROM PHANCONG WHERE MANV = @MANV
	SELECT @LOAIXE = LOAIXE FROM XE WHERE MAXE = @MAXE
	
	IF @MAPHONG = 'Ngoại thành'
	BEGIN
		IF @LOAIXE <> 'Toyota'
		BEGIN
			RAISERROR('Nhân viên thuộc phòng lái xe “Ngoại thành” chỉ được phân công lái xe loại Toyota.', 16, 1)
			ROLLBACK TRANSACTION
		END
	END
END
GO
CREATE TRIGGER TR_XE_UPDATE
ON XE
FOR UPDATE
AS
BEGIN
	DECLARE @MAXE CHAR(5), @MAPHONG CHAR(5), @LOAIXE VARCHAR(20), @MANV CHAR(5), @MAPC CHAR(5)

	SELECT @MAXE = MAXE, @LOAIXE = LOAIXE FROM INSERTED
	SELECT @MANV = MANV FROM PHANCONG WHERE MAXE = @MAXE
	SELECT @MAPHONG = MAPHONG FROM NHANVIEN WHERE MANV = @MANV

	IF @MAPHONG = 'Ngoại thành'
	BEGIN
		IF @LOAIXE <> 'Toyota'
		BEGIN
			RAISERROR('Nhân viên thuộc phòng lái xe “Ngoại thành” chỉ được phân công lái xe loại Toyota.', 16, 1)
			ROLLBACK TRANSACTION
		END
	END
END

DROP TRIGGER TR_PHANCONG_LOAIXE
DROP TRIGGER TR_NHANVIEN_UPDATE
DROP TRIGGER TR_XE_UPDATE



---------------------------------------------------------------
--Câu 3: TRUY VẤN
--3.1. Tìm nhân viên (MaNV,HoTen) thuộc phòng lái xe “Nội thành” được phân công lái 
--loại xe Toyota có số chỗ ngồi là 4. (1.5 đ)  
SELECT NHANVIEN.MANV, NHANVIEN.HOTEN
FROM NHANVIEN, PHONGBAN, XE, PHANCONG
WHERE NHANVIEN.MANV=PHANCONG.MANV AND PHANCONG.MAXE=XE.MAXE AND PHONGBAN.MAPHONG=NHANVIEN.MAPHONG
	AND TENPHONG='Noi Thanh' AND LOAIXE='Toyota' AND SOCHONGOI=4


--3.2. Tìm nhân viên(MANV,HoTen) là trưởng phòng được phân công lái tất cả các loại 
--xe. (1.5 đ)  
SELECT NHANVIEN.MANV, NHANVIEN.HOTEN
FROM NHANVIEN, PHONGBAN
WHERE NHANVIEN.MANV = PHONGBAN.TRUONGPHONG 
	AND NHANVIEN.MAPHONG=PHONGBAN.MAPHONG
	AND NOT EXISTS (
		SELECT * 
		FROM XE
		WHERE NOT EXISTS (
			SELECT *
			FROM PHANCONG
			WHERE PHANCONG.MAXE=XE.MAXE
			AND PHANCONG.MANV=NHANVIEN.MANV
		)
	)


--3.3. Trong mỗi phòng ban,tìm nhân viên (MaNV,HoTen) được phân công lái ít nhất loại 
--xe Toyota. (1 đ)
SELECT PHONGBAN.TENPHONG, NHANVIEN.MANV, NHANVIEN.HOTEN
FROM NHANVIEN, PHONGBAN, PHANCONG, XE
WHERE NHANVIEN.MANV=PHANCONG.MANV AND PHANCONG.MAXE=XE.MAXE AND PHONGBAN.MAPHONG=NHANVIEN.MAPHONG
GROUP BY PHONGBAN.TENPHONG, NHANVIEN.MANV, NHANVIEN.HOTEN
HAVING COUNT(LOAIXE) = (
	SELECT TOP 1 COUNT(LOAIXE)
	FROM NHANVIEN, PHONGBAN, PHANCONG, XE
	WHERE NHANVIEN.MANV=PHANCONG.MANV AND PHANCONG.MAXE=XE.MAXE AND PHONGBAN.MAPHONG=NHANVIEN.MAPHONG
	AND LOAIXE='Toyota'
	ORDER BY COUNT(LOAIXE) ASC
)
-------------------------------------------------------------------------------------------------------------
--ĐỀ ÔN SỐ 3

---------------------------------------------------------------
--Câu 1. DDL
CREATE DATABASE DE3_DOCGIA
USE DE3_DOCGIA

CREATE TABLE DOCGIA 
(
	MADG CHAR(5),
	HOTEN VARCHAR(30),
	NGAYSINH SMALLDATETIME,
	DIACHI VARCHAR(30),
	SODT VARCHAR(15),
	CONSTRAINT PK_DOCGIA PRIMARY KEY (MADG)
)

CREATE TABLE SACH
(
	MASACH CHAR(5),
	TENSACH VARCHAR(25),
	THELOAI VARCHAR(25),
	NHAXUATBAN VARCHAR(30),
	CONSTRAINT PK_SACH PRIMARY KEY (MASACH)
)

CREATE TABLE PHIEUTHUE
(
	MAPT CHAR(5),
	MADG CHAR(5) NOT NULL,
	NGAYTHUE SMALLDATETIME,
	NGAYTRA SMALLDATETIME,
	SOSACHTHUE INT
	CONSTRAINT PK_PHIEUTHUE PRIMARY KEY (MAPT)
)

CREATE TABLE CHITIET_PM 
(
	MAPT CHAR(5),
	MASACH CHAR(5),
	CONSTRAINT PK_CHITIET_PM PRIMARY KEY (MAPT,MASACH)
)

--Thêm khóa ngoại 
ALTER TABLE CHITIET_PM 
ADD CONSTRAINT FK_MAPT FOREIGN KEY (MAPT) REFERENCES PHIEUTHUE(MAPT)

ALTER TABLE CHITIET_PM 
ADD CONSTRAINT FK_MASACH FOREIGN KEY (MASACH) REFERENCES SACH(MASACH)

ALTER TABLE PHIEUTHUE 
ADD CONSTRAINT FK_MADG FOREIGN KEY (MADG) REFERENCES DOCGIA(MADG)

---------------------------------------------------------------
--Câu 2: TRIGGER
--2.1. Mỗi lần thuê  sách, độc giả không được thuê quá 10 ngày. (1.5 đ) 
ALTER TABLE PHIEUTHUE 
ADD CONSTRAINT CK_NGAYTHUE_NGAYTRA CHECK (DATEDIFF(DAY,NGAYTHUE,NGAYTRA) <= 10)

--2.2. Số sách thuê trong bảng phiếu thuê bằng tổng số lần thuê sách có trong bảng chi tiết 
--phiếu thuê. (1.5 đ) 
GO
CREATE TRIGGER TRG_SOSACHTHUE ON PHIEUTHUE
FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @MAPT CHAR(5), @SOSACHTHUE INT, @TONGSOLAN INT
	SELECT @MAPT = MAPT FROM INSERTED
	SELECT @SOSACHTHUE = SOSACHTHUE FROM INSERTED
	SELECT @TONGSOLAN = COUNT(*) FROM CHITIET_PM WHERE MAPT = @MAPT

	IF @SOSACHTHUE <> @TONGSOLAN
		BEGIN
			RAISERROR('Số sách thuê trong bảng phiếu thuê bằng tổng số lần thuê sách có trong bảng chi tiết phiếu thuê.',16,1)
			ROLLBACK TRAN
		END
	ELSE
		BEGIN
			UPDATE PHIEUTHUE SET SOSACHTHUE = @TONGSOLAN WHERE MAPT = @MAPT
		END
END

DROP TRIGGER TRG_SOSACHTHUE

---------------------------------------------------------------
--Câu 3: TRUY VẤN
--3.1. Tìm các độc giả (MaDG,HoTen) đã thuê sách thuộc thể loại “Tin học” trong năm 
--2007. (1.5 đ)  
SELECT DISTINCT DOCGIA.MADG, DOCGIA.HOTEN
FROM DOCGIA, PHIEUTHUE, CHITIET_PM, SACH
WHERE DOCGIA.MADG = PHIEUTHUE.MADG 
AND PHIEUTHUE.MAPT = CHITIET_PM.MAPT 
AND CHITIET_PM.MASACH = SACH.MASACH 
AND SACH.THELOAI = 'Tin học' AND YEAR(PHIEUTHUE.NGAYTHUE) = 2007 


--3.2. Tìm các độc giả (MaDG,HoTen) đã thuê nhiều thể loại sách nhất. (1.5 đ)  
SELECT TOP 1 WITH TIES DOCGIA.MADG, DOCGIA.HOTEN
FROM DOCGIA, PHIEUTHUE, CHITIET_PM, SACH
WHERE DOCGIA.MADG = PHIEUTHUE.MADG AND PHIEUTHUE.MAPT = CHITIET_PM.MAPT AND CHITIET_PM.MASACH = SACH.MASACH
GROUP BY DOCGIA.MADG, DOCGIA.HOTEN
ORDER BY COUNT(DISTINCT THELOAI) DESC

--3.3. Trong mỗi thể loại sách, cho biết tên sách được thuê nhiều nhất. (1 đ)  
SELECT DISTINCT THELOAI, TENSACH
FROM SACH, CHITIET_PM
WHERE SACH.MASACH = CHITIET_PM.MASACH
GROUP BY THELOAI, TENSACH
HAVING COUNT (CHITIET_PM.MASACH) >= ALL (
	SELECT COUNT(CHITIET_PM.MASACH)
	FROM SACH, CHITIET_PM
	WHERE SACH.MASACH = CHITIET_PM.MASACH
)
-------------------------------------------------------------------------------------------------------------
--ĐỀ ÔN SỐ 4

---------------------------------------------------------------
--Câu 1. DDL
CREATE DATABASE DE4_KHACHHANG
USE DE4_KHACHHANG

CREATE TABLE KHACHHANG
(
	MAKH CHAR(5),
	HOTEN VARCHAR(30),
	DIACHI VARCHAR(30),
	SODT VARCHAR(15),
	LOAIKH VARCHAR(10),
	CONSTRAINT PK_KHACHHANG PRIMARY KEY (MaKH)
)

CREATE TABLE BANG_DIA 
(
	MABD CHAR(5),
	TENBD VARCHAR(25),
	THELOAI VARCHAR(25),
	CONSTRAINT PK_BANG_DIA  PRIMARY KEY (MABD)
)

CREATE TABLE PHIEUTHUE 
(
	 MAPT CHAR(5),
	 MAKH CHAR(5),
	 NGAYTHUE SMALLDATETIME,
	 NGAYTTRA SMALLDATETIME,
	 SOLUONGTHUE INT,
	 CONSTRAINT PK_PHIEUTHUE   PRIMARY KEY (MAPT)
)

CREATE TABLE CHITIET_PM 
(
	MAPT CHAR(5) NOT NULL,
	MABD CHAR(5) NOT NULL,
	CONSTRAINT PK_CHITIET_PM PRIMARY KEY(MAPT,MABD)
)

--Thêm khóa ngoại 
ALTER TABLE PHIEUTHUE 
ADD CONSTRAINT FK_MAKH FOREIGN KEY(MAKH) REFERENCES KHACHHANG(MAKH)

ALTER TABLE CHITIET_PM 
ADD CONSTRAINT FK_MAPT FOREIGN KEY(MAPT) REFERENCES PHIEUTHUE(MAPT)

ALTER TABLE CHITIET_PM 
ADD CONSTRAINT FK_MABD FOREIGN KEY(MABD) REFERENCES BANG_DIA(MABD)

---------------------------------------------------------------
--Câu 2: TRIGGER
--2.1. Thể loại băng đĩa chỉ thuộc các thể loại sau “ca nhạc”, “phim hành động”, “phim tình 
--cảm”, “phim hoạt hình”. (1.5 đ) 
ALTER TABLE BANG_DIA 
ADD CONSTRAINT CK_THELOAI CHECK(THELOAI IN('ca nhạc','phim hành động','phim tình cảm','phim hoạt hình'))

--2.2. Chỉ những khách hàng thuộc loại VIP mới được thuê với số lượng băng đĩa trên 5. 
--(1.5 đ) 
GO
CREATE TRIGGER TRG_SLUONGTHUE ON PHIEUTHUE
FOR INSERT, UPDATE
AS
BEGIN
	DECLARE @MAKH CHAR(5), @LOAIKH VARCHAR(10), @SOLUONGTHUE INT
	SELECT @MAKH = MAKH, @SOLUONGTHUE = SOLUONGTHUE FROM INSERTED
	SELECT @LOAIKH = LOAIKH FROM KHACHHANG WHERE MAKH = @MAKH
	IF @LOAIKH = 'VIP' AND @SOLUONGTHUE < 5
	BEGIN
		RAISERROR('Khách hàng VIP phải thuê trên 5 băng đĩa',16,1)
		ROLLBACK TRAN
	END
END

---------------------------------------------------------------
--Câu 3: TRUY VẤN
--3.1. Tìm các khách hàng (MaDG,HoTen) đã thuê băng đĩa  thuộc thể loại phim “Tình 
--cảm” có số lượng thuê lớn hơn 3. (1.5 đ)  
SELECT KHACHHANG.MAKH, KHACHHANG.HOTEN
FROM KHACHHANG, PHIEUTHUE, CHITIET_PM, BANG_DIA
WHERE KHACHHANG.MAKH = PHIEUTHUE.MAKH 
AND PHIEUTHUE.MAPT = CHITIET_PM.MAPT 
AND CHITIET_PM.MABD = BANG_DIA.MABD 
AND BANG_DIA.THELOAI = 'Tình cảm'
AND PHIEUTHUE.SOLUONGTHUE > 3


--3.2. Tìm các khách hàng(MaDG,HoTen) thuộc loại VIP đã thuê nhiều băng đĩa nhất. (1.5 đ) 
SELECT TOP 1 WITH TIES KHACHHANG.MAKH, KHACHHANG.HOTEN
FROM KHACHHANG, PHIEUTHUE
WHERE KHACHHANG.MAKH = PHIEUTHUE.MAKH
AND KHACHHANG.LOAIKH = 'VIP'
GROUP BY KHACHHANG.MAKH, KHACHHANG.HOTEN
ORDER BY SUM(PHIEUTHUE.SOLUONGTHUE) DESC


--3.3. Trong mỗi thể loại băng đĩa, cho biết tên khách hàng nào đã thuê nhiều băng đĩa nhất. 
--(1 đ)  
SELECT BANG_DIA.THELOAI, KHACHHANG.HOTEN
FROM KHACHHANG, PHIEUTHUE, CHITIET_PM, BANG_DIA
WHERE KHACHHANG.MAKH = PHIEUTHUE.MAKH
AND PHIEUTHUE.MAPT = CHITIET_PM.MAPT
AND CHITIET_PM.MABD = BANG_DIA.MABD
GROUP BY BANG_DIA.THELOAI, KHACHHANG.HOTEN
HAVING SUM(PHIEUTHUE.SOLUONGTHUE) >= ALL (
	SELECT SUM(PHIEUTHUE.SOLUONGTHUE)
	FROM KHACHHANG, PHIEUTHUE, CHITIET_PM, BANG_DIA
	WHERE KHACHHANG.MAKH = PHIEUTHUE.MAKH
	AND PHIEUTHUE.MAPT = CHITIET_PM.MAPT
	AND CHITIET_PM.MABD = BANG_DIA.MABD
	GROUP BY BANG_DIA.THELOAI, KHACHHANG.HOTEN
)
